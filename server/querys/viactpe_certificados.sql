-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 20-09-2024 a las 12:24:59
-- Versión del servidor: 10.4.32-MariaDB
-- Versión de PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `viactpe_certificados`
--

DELIMITER $$
--
-- Procedimientos
--
CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_CRUD_ALUMNOS_CERTIFICADOS` (IN `$METODO` VARCHAR(30), IN `$NRO_DOC` VARCHAR(12), IN `$LIBRO` VARCHAR(10), IN `$FOLIO` VARCHAR(10), IN `$NUMERO` VARCHAR(10), IN `$XMLDOC` LONGTEXT)   BEGIN
  DECLARE i INT;
  DECLARE count INT;
  DECLARE exit HANDLER FOR SQLEXCEPTION
  BEGIN
      GET DIAGNOSTICS CONDITION 1
      @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
      SELECT @p2 AS MSG, 0 AS RESULTADO;
  END;

  DROP TEMPORARY TABLE IF EXISTS TEMP_ALUMNO;
  DROP TEMPORARY TABLE IF EXISTS TEMP_CERTIFICADO;

  CREATE TEMPORARY TABLE TEMP_ALUMNO (
    CODALUMNO CHAR(12),
    TP_DOC VARCHAR(10),
    NRO_DOC VARCHAR(12),
    NOMBRES VARCHAR(200),
    APELLIDOS VARCHAR(200),
    FECHA_NAC DATE,
    CORREO VARCHAR(100),
    NRO_CELULAR VARCHAR(20),
    ACTIVO TINYINT(1)
  );

  CREATE TEMPORARY TABLE TEMP_CERTIFICADO (
    IDCERTIFICADO INT,
    LIBRO VARCHAR(10),
    FOLIO VARCHAR(10),
    NUMERO VARCHAR(10),
    CODALUMNO CHAR(12),
    CURSO VARCHAR(500),
    NOMBRE VARCHAR(500),
    BASE64 TEXT,
    NOTA DECIMAL(4,2),
    ACTIVO TINYINT(1),
    FECHA_CERT DATE,
    FECHA_CREACION DATE,
    IDUSUARIO VARCHAR(20)
  );

  -- CREAR ALUMNO
  IF ($METODO = 'CREAR_ALUMNO') THEN
    IF EXISTS (SELECT 1 FROM ALUMNOS WHERE NRO_DOC = $NRO_DOC) THEN
      SELECT 'El alumno ya existe' AS MSG, 0 AS RESULTADO;
    ELSE
      INSERT INTO ALUMNOS (CODALUMNO, TP_DOC, NRO_DOC, NOMBRES, APELLIDOS, FECHA_NAC, CORREO, NRO_CELULAR, ACTIVO)
      SELECT 
        ExtractValue($XMLDOC, '//ALUMNO/CODALUMNO'),
        ExtractValue($XMLDOC, '//ALUMNO/TP_DOC'),
        ExtractValue($XMLDOC, '//ALUMNO/NRO_DOC'),
        ExtractValue($XMLDOC, '//ALUMNO/NOMBRES'),
        ExtractValue($XMLDOC, '//ALUMNO/APELLIDOS'),
        ExtractValue($XMLDOC, '//ALUMNO/FECHA_NAC'),
        ExtractValue($XMLDOC, '//ALUMNO/CORREO'),
        ExtractValue($XMLDOC, '//ALUMNO/NRO_CELULAR'),
        ExtractValue($XMLDOC, '//ALUMNO/ACTIVO');
      SELECT 'Alumno creado exitosamente' AS MSG, 1 AS RESULTADO;
    END IF;

  -- CARGAR CERTIFICADO
  ELSEIF ($METODO = 'CARGAR_CERTIFICADO') THEN
  
    /*
      CALL SP_CRUD_ALUMNOS_CERTIFICADOS('CARGAR_CERTIFICADO', '', '', '', '', 
      '<CERTIFICADO>
      <LIBRO>TEST</LIBRO>
      <FOLIO>2024</FOLIO>
      <NUMERO>00001</NUMERO>
      <CODALUMNO>000070048987</CODALUMNO>
      <CURSO>TEST</CURSO>
      <NOMBRE/>
      <BASE64></BASE64>
      <NOTA>18</NOTA>
      <ACTIVO>1</ACTIVO>
      <FECHA_CERT>2024-09-15</FECHA_CERT>
      <IDUSUARIO>FURIBE</IDUSUARIO>
      </CERTIFICADO>');
    */
    INSERT INTO CERTIFICADOS (LIBRO, FOLIO, NUMERO, CODALUMNO, CURSO, NOMBRE, BASE64, NOTA, ACTIVO, FECHA_CERT, FECHA_CREACION, IDUSUARIO)
    SELECT 
      ExtractValue($XMLDOC, '//CERTIFICADO/LIBRO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/FOLIO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/NUMERO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/CODALUMNO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/CURSO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/NOMBRE'),
      ExtractValue($XMLDOC, '//CERTIFICADO/BASE64'),
      ExtractValue($XMLDOC, '//CERTIFICADO/NOTA'),
      ExtractValue($XMLDOC, '//CERTIFICADO/ACTIVO'),
      ExtractValue($XMLDOC, '//CERTIFICADO/FECHA_CERT'),
      CURRENT_DATE(),
      ExtractValue($XMLDOC, '//CERTIFICADO/IDUSUARIO');
    SELECT 'Certificado cargado exitosamente' AS MSG, 1 AS RESULTADO;
    
  -- ESTADO CERTIFICADO
  ELSEIF ($METODO = 'ESTADO_CERTIFICADO') THEN
    /*
      CALL SP_CRUD_ALUMNOS_CERTIFICADOS('ESTADO_CERTIFICADO', '', '', '', '', 1);
    */
    UPDATE CERTIFICADOS SET ACTIVO = CASE WHEN ACTIVO = 1 THEN 0 ELSE 1 END WHERE `IDCERTIFICADO` = $XMLDOC;
    SELECT 'Certificado actualizado exitosamente' AS MSG, 1 AS RESULTADO;
  
  -- LISTAR CERTIFICADOS
  ELSEIF ($METODO = 'LISTAR_CERTIFICADOS') THEN
    /*
      CALL SP_CRUD_ALUMNOS_CERTIFICADOS('LISTAR_CERTIFICADOS', '', '', '', '', '');
    */
    SELECT 
      C.IDCERTIFICADO, C.LIBRO, C.FOLIO, C.NUMERO, C.CODALUMNO, CONCAT(A.NOMBRES , ' ' , A.APELLIDOS) AS ALUMNO, A.NOMBRES, A.APELLIDOS, A.NRO_DOC, C.CURSO, C.NOMBRE, C.BASE64, C.NOTA, 
      DATE_FORMAT(C.FECHA_CERT, '%d/%m/%Y') AS FECHA_CERTIFICADO, C.ACTIVO, DATE_FORMAT(C.FECHA_CREACION, '%d/%m/%Y') AS FECHA_CREACION, C.IDUSUARIO, A.CORREO, A.FECHA_NAC, A.NRO_CELULAR 
    FROM CERTIFICADOS C
    JOIN ALUMNOS A ON C.CODALUMNO = A.CODALUMNO;
    /*WHERE C.ACTIVO = 1;*/

  -- BUSCAR CERTIFICADO POR NRO_DOC
  ELSEIF ($METODO = 'BUSCAR_POR_NRO_DOC') THEN
    /*
      CALL SP_CRUD_ALUMNOS_CERTIFICADOS('BUSCAR_POR_NRO_DOC', '70048987', '', '', '', '');
    */
    SELECT 
      C.IDCERTIFICADO, C.LIBRO, C.FOLIO, C.NUMERO, C.CODALUMNO, A.NOMBRES, A.APELLIDOS, A.NRO_DOC, C.CURSO, C.NOMBRE, C.BASE64, C.NOTA, 
      DATE_FORMAT(C.FECHA_CERT, '%d/%m/%Y') AS FECHA_CERTIFICADO, C.ACTIVO 
    FROM CERTIFICADOS C
    JOIN ALUMNOS A ON C.CODALUMNO = A.CODALUMNO
    WHERE A.NRO_DOC = $NRO_DOC AND C.ACTIVO = 1;

  -- BUSCAR CERTIFICADO POR LIBRO, FOLIO Y NUMERO
  ELSEIF ($METODO = 'BUSCAR_POR_LIBRO_FOLIO_NUMERO') THEN
    /*
      CALL SP_CRUD_ALUMNOS_CERTIFICADOS('BUSCAR_POR_LIBRO_FOLIO_NUMERO', '', 'PYTHO', '2024', '00001', '');
    */
    SELECT 
      C.IDCERTIFICADO, C.LIBRO, C.FOLIO, C.NUMERO, C.CODALUMNO, A.NOMBRES, A.APELLIDOS, A.NRO_DOC, C.CURSO, C.NOMBRE, C.BASE64, C.NOTA, 
      DATE_FORMAT(C.FECHA_CERT, '%d/%m/%Y') AS FECHA_CERTIFICADO, C.ACTIVO 
    FROM CERTIFICADOS C
    JOIN ALUMNOS A ON C.CODALUMNO = A.CODALUMNO
    WHERE C.LIBRO = $LIBRO AND C.FOLIO = $FOLIO AND C.NUMERO = $NUMERO AND C.ACTIVO = 1;

  ELSE
    SELECT 'Método no válido' AS MSG, 0 AS RESULTADO;
  END IF;
END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `SP_LOGIN` (IN `$USUARIO` VARCHAR(20), IN `$CONTRA` VARCHAR(100))   BEGIN
	DECLARE i INT;
	DECLARE count INT;
  DECLARE exit HANDLER FOR SQLEXCEPTION
  BEGIN
      -- Si ocurre una excepción, seleccionamos el mensaje de error
      GET DIAGNOSTICS CONDITION 1
      @p1 = RETURNED_SQLSTATE, @p2 = MESSAGE_TEXT;
      SELECT @p2 AS MSG, 0 AS RESULTADO;
  END;

  IF ($CONTRA = '') THEN
    IF EXISTS(SELECT * FROM USUARIOS WHERE UPPER(USUARIO) = UPPER($USUARIO)) THEN
      IF EXISTS(SELECT * FROM USUARIOS WHERE UPPER(USUARIO) = UPPER($USUARIO) AND ACTIVO = 1) THEN
        SELECT
          *,
          '' AS MSG,
          1 AS RESULTADO
        FROM USUARIOS
        WHERE UPPER(USUARIO) = UPPER($USUARIO);
      ELSE
        SELECT 'El usuario no se encuentra activo' AS MSG, 0 AS RESULTADO;
      END IF;
    ELSE
      SELECT 'El usuario no existe' AS MSG, 0 AS RESULTADO;
    END IF;
  ELSE
    SELECT
      *,
      '' AS MSG,
      1 AS RESULTADO
    FROM USUARIOS
    WHERE UPPER(USUARIO) = UPPER($USUARIO) AND CONTRA = $CONTRA;
  END IF;
END$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `alumnos`
--

CREATE TABLE `alumnos` (
  `CODALUMNO` char(12) NOT NULL,
  `TP_DOC` varchar(10) NOT NULL,
  `NRO_DOC` varchar(12) NOT NULL,
  `NOMBRES` varchar(200) NOT NULL,
  `APELLIDOS` varchar(200) NOT NULL,
  `FECHA_NAC` date NOT NULL,
  `CORREO` varchar(100) NOT NULL,
  `NRO_CELULAR` varchar(20) NOT NULL,
  `ACTIVO` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `alumnos`
--

INSERT INTO `alumnos` (`CODALUMNO`, `TP_DOC`, `NRO_DOC`, `NOMBRES`, `APELLIDOS`, `FECHA_NAC`, `CORREO`, `NRO_CELULAR`, `ACTIVO`) VALUES
('000070048987', 'DNI', '70048987', 'FRANK', 'URIBE HUARCAYA', '1998-03-11', 'fkuribe@gmail.com', '948468858', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `certificados`
--

CREATE TABLE `certificados` (
  `IDCERTIFICADO` int(11) NOT NULL,
  `LIBRO` varchar(10) NOT NULL,
  `FOLIO` varchar(10) NOT NULL,
  `NUMERO` varchar(10) NOT NULL,
  `CODALUMNO` char(12) NOT NULL,
  `CURSO` varchar(500) NOT NULL,
  `NOMBRE` varchar(500) NOT NULL,
  `BASE64` longtext NOT NULL,
  `NOTA` decimal(4,2) NOT NULL,
  `ACTIVO` tinyint(1) NOT NULL,
  `FECHA_CERT` date NOT NULL,
  `FECHA_CREACION` date NOT NULL,
  `IDUSUARIO` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `usuarios`
--

CREATE TABLE `usuarios` (
  `IDUSUARIO` varchar(20) NOT NULL,
  `USUARIO` varchar(20) NOT NULL,
  `CONTRA` varchar(200) NOT NULL,
  `NOMBRES` varchar(200) NOT NULL,
  `APELLIDOS` varchar(200) NOT NULL,
  `ACTIVO` tinyint(1) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Volcado de datos para la tabla `usuarios`
--

INSERT INTO `usuarios` (`IDUSUARIO`, `USUARIO`, `CONTRA`, `NOMBRES`, `APELLIDOS`, `ACTIVO`) VALUES
('ADMIN', 'ADMIN', '$2a$10$Sf5spCsPtKZ1Md4RMLUpxei7ZV44aiGWS/dLoUljcnxk0XWAsk1YK', 'ADMIN', '', 1),
('DTIPIANI', 'DTIPIANI', '$2a$10$Sf5spCsPtKZ1Md4RMLUpxei7ZV44aiGWS/dLoUljcnxk0XWAsk1YK', 'DAVID', 'TIPIANI', 1),
('FURIBE', 'FURIBE', '$2a$10$et.ppTuL0rxG0o09Wn1pR.KKvHl2HousU4xLNqVXIVo0Abj9Py0ZC', 'FRANK', 'URIBE HUARCAYA', 1);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `alumnos`
--
ALTER TABLE `alumnos`
  ADD PRIMARY KEY (`CODALUMNO`);

--
-- Indices de la tabla `certificados`
--
ALTER TABLE `certificados`
  ADD PRIMARY KEY (`IDCERTIFICADO`),
  ADD KEY `CODALUMNO` (`CODALUMNO`),
  ADD KEY `IDUSUARIO` (`IDUSUARIO`);

--
-- Indices de la tabla `usuarios`
--
ALTER TABLE `usuarios`
  ADD PRIMARY KEY (`IDUSUARIO`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `certificados`
--
ALTER TABLE `certificados`
  MODIFY `IDCERTIFICADO` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=20;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `certificados`
--
ALTER TABLE `certificados`
  ADD CONSTRAINT `CERTIFICADOS_ibfk_1` FOREIGN KEY (`CODALUMNO`) REFERENCES `alumnos` (`CODALUMNO`),
  ADD CONSTRAINT `CERTIFICADOS_ibfk_2` FOREIGN KEY (`IDUSUARIO`) REFERENCES `usuarios` (`IDUSUARIO`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
